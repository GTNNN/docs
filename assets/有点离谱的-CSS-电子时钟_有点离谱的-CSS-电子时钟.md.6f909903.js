import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.76cb5871.js";const l="/docs/assets/kiuf2gokxn_U_Gc0FcMFW.102cf230.gif",o="/docs/assets/3llubme3fj_rQ47xC-nq2.218d93f2.png",e="/docs/assets/ze3m0_wzdr_a_6ws-xZ5s.8ef61814.gif",t="/docs/assets/g2tsk5f_mv_Y0yVIhStMe.03f100e9.gif",c="/docs/assets/esic3oxi_a_BMVehjdtwT.920588cd.gif",r="/docs/assets/glsz8bbkl1_9kTnxqtBMX.905cb330.png",E="/docs/assets/1eq7towmte_n_hLfBsVo0.930a32f5.gif",y="/docs/assets/s0rnvazexw_WrZ1B7OEfh.a6c575bd.gif",i="/docs/assets/5hx3hh6kag_sRkmV_3AjE.0f389574.gif",F="/docs/assets/zj9dumlara_P1xaD7AU5p.8dd2bd49.gif",d="/docs/assets/wdcllyvovf_CPDAtgw0ZU.e2420342.gif",D=JSON.parse('{"title":"有点离谱的 CSS 电子时钟","description":"","frontmatter":{},"headers":[],"relativePath":"有点离谱的-CSS-电子时钟/有点离谱的-CSS-电子时钟.md","filePath":"有点离谱的-CSS-电子时钟/有点离谱的-CSS-电子时钟.md"}'),C={name:"有点离谱的-CSS-电子时钟/有点离谱的-CSS-电子时钟.md"},h=p('<h1 id="有点离谱的-css-电子时钟" tabindex="-1">有点离谱的 CSS 电子时钟 <a class="header-anchor" href="#有点离谱的-css-电子时钟" aria-label="Permalink to &quot;有点离谱的 CSS 电子时钟&quot;">​</a></h1><p>通常要做一个时钟，肯定离不开 JS 定时器。今天换一种思路，用 CSS 来实现一个时钟，如下：</p><p>Kapture 2022-03-04 at 16.28.36</p><p><img src="'+l+`" alt=""></p><p>你也可以访问这个<strong>CSS time (codepen.io) [1]</strong> 查看实际效果</p><p>当然借用了一点点 JS 用于初始化时间，整个时钟的运行都是由 CSS 完成的，有很多你可能不知道的小技巧，一起看看吧</p><h2 id="一、数字的变换" tabindex="-1">一、数字的变换 <a class="header-anchor" href="#一、数字的变换" aria-label="Permalink to &quot;一、数字的变换&quot;">​</a></h2><p>先看看数字是如何变换的。</p><p>在以前，如果要实现数字的递增变化，可能需要提前准备好这些数字，例如像这样</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;"> &lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;1&lt;/</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;2&lt;/</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;59&lt;/</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;1&lt;/</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;2&lt;/</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  ...</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;59&lt;/</span><span style="color:#22863A;">i</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>然后通过改变位移来实现。</p><p>但是，现在有更简洁的方式可以实现了，那就是<strong>CSS @property [2]</strong> ，不了解这个的可以参考这篇文章：<strong>CSS @property，让不可能变可能 [3]</strong> 。这是干什么的呢？简单来讲，可以自定义属性，在这个例子中， <strong>可以让数字像颜色一样进行过渡和动画</strong> ，可能不太懂，直接看例子吧</p><p>假设 HTML 是这样的</p><div class="language-纯文本 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">纯文本</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;span style=&quot;--num: 0&quot;&gt;&lt;/span&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;span style=&quot;--num: 0&quot;&gt;&lt;/span&gt;</span></span></code></pre></div><p>我们让这个自定义变量在页面中展示出来，单纯的<code>content</code>无法直接显示自定义变量，需要借助定时器，有兴趣的可以参考这篇文章：<strong>小tips: 如何借助content属性显示CSS var变量值[4]</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">span</span><span style="color:#B392F0;">::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: num </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--num</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">num</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">span</span><span style="color:#6F42C1;">::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: num </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--num</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">num</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+o+`" alt=""></p><p>然后，可以通过<code>:hover</code>改变这个数字</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">span</span><span style="color:#B392F0;">:hover::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--num</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">59</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">span</span><span style="color:#6F42C1;">:hover::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--num</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">59</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+e+`" alt=""></p><p>很生硬的从 0 变成 59 了，非常符合常规。如果利用 CSS property，情况就不一样了，需要改造的地方很少，先定义一下<code>--h</code>，然后给这个变量一个过渡时间，如下</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@property</span><span style="color:#E1E4E8;"> --h { </span></span>
<span class="line"><span style="color:#E1E4E8;">  syntax: &#39;&lt;integer</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  inherits: false;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">initial-value</span><span style="color:#E1E4E8;">: 0;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">span</span><span style="color:#B392F0;">::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">transition</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> --num;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@property</span><span style="color:#24292E;"> --h { </span></span>
<span class="line"><span style="color:#24292E;">  syntax: &#39;&lt;integer</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  inherits: false;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">initial-value</span><span style="color:#24292E;">: 0;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">span</span><span style="color:#6F42C1;">::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">transition</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> --num;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>神奇的一幕发生了</p><p><img src="`+t+`" alt=""></p><p>‍</p><p>看着好像不可思议？可以这么理解，通过<code>@property</code>定义后，这个变量本身可以单独设置过渡了，而不再取决于一些仅支持过渡的属性（<code>color</code>、<code>width</code>等）。甚至还能加上动画，需要用到<code>steps</code>方法，设置动画周期为无限，如下</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@keyframes</span><span style="color:#FFAB70;"> num </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">--num</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: num </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#E36209;"> num </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">to</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">--num</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">span</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: num </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>时钟的基本运行原理就是这样了，<strong>一个无限循环的 CSS 动画！</strong></p><p><img src="`+c+`" alt=""></p><h2 id="二、时、分、秒" tabindex="-1">二、时、分、秒 <a class="header-anchor" href="#二、时、分、秒" aria-label="Permalink to &quot;二、时、分、秒&quot;">​</a></h2><p>下面来看具体时、分、秒的实现，HTML 如下</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;time&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">span</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hour&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">a</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;split&quot;</span><span style="color:#E1E4E8;">&gt;:&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">span</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;minitus&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">a</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;split&quot;</span><span style="color:#E1E4E8;">&gt;:&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">span</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;seconds&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;time&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">span</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;hour&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">a</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;split&quot;</span><span style="color:#24292E;">&gt;:&lt;/</span><span style="color:#22863A;">a</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">span</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;minitus&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">a</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;split&quot;</span><span style="color:#24292E;">&gt;:&lt;/</span><span style="color:#22863A;">a</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">span</span><span style="color:#6F42C1;"> class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;seconds&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>给时、分、秒附上初始值</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@property</span><span style="color:#E1E4E8;"> --h { </span></span>
<span class="line"><span style="color:#E1E4E8;">  syntax: &#39;&lt;integer</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  inherits: false;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">initial-value</span><span style="color:#E1E4E8;">: 0;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">@property</span><span style="color:#E1E4E8;"> --m { </span></span>
<span class="line"><span style="color:#E1E4E8;">  syntax: &#39;&lt;integer</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  inherits: false;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">initial-value</span><span style="color:#E1E4E8;">: 0;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">@property</span><span style="color:#E1E4E8;"> --s { </span></span>
<span class="line"><span style="color:#E1E4E8;">  syntax: &#39;&lt;integer</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  inherits: false;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">initial-value</span><span style="color:#E1E4E8;">: 0;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.hour::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: hour </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--h</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hour</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.minitus::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: minitus </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--m</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">minitus</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.seconds::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: seconds </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--s</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">seconds</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@property</span><span style="color:#24292E;"> --h { </span></span>
<span class="line"><span style="color:#24292E;">  syntax: &#39;&lt;integer</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  inherits: false;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">initial-value</span><span style="color:#24292E;">: 0;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">@property</span><span style="color:#24292E;"> --m { </span></span>
<span class="line"><span style="color:#24292E;">  syntax: &#39;&lt;integer</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  inherits: false;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">initial-value</span><span style="color:#24292E;">: 0;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">@property</span><span style="color:#24292E;"> --s { </span></span>
<span class="line"><span style="color:#24292E;">  syntax: &#39;&lt;integer</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  inherits: false;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">initial-value</span><span style="color:#24292E;">: 0;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.hour::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: hour </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--h</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">hour</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.minitus::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: minitus </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--m</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">minitus</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.seconds::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: seconds </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--s</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">seconds</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+r+`" alt=""></p><p>‍</p><p>这里的时、分、秒并没有联动关系，所以各自都需要单独的动画。下面就需要思考一下🤔，如果用 CSS 动画来实现，每个的动画起始点和时长是多少呢？</p><p>没错，就是你想的，时针是<code>0-23</code>，时长<code>24h</code>，分针是<code>0-59</code>，时长<code>60min</code>，秒针是<code>0-59</code>，时长<code>60s</code>，但是 CSS 中的时间单位只支持<code>秒(s)</code>或者<code>毫秒(ms)</code>，所以这里需要转换一下，时长分别是<code>60s*60*24</code>、<code>60s*60</code>、<code>60s</code>，具体实现如下：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@keyframes</span><span style="color:#FFAB70;"> hour </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">--h</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">24</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">@keyframes</span><span style="color:#FFAB70;"> minitus </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">--m</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">60</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">@keyframes</span><span style="color:#FFAB70;"> seconds </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">--s</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">60</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.hour::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: hour </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--h</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hour</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: hour </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">) </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.minitus::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: minitus </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--m</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">minitus</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: minitus </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">) </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.seconds::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">counter-reset</span><span style="color:#E1E4E8;">: seconds </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--s</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">counter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">seconds</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: seconds </span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#E36209;"> hour </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">to</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">--h</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">24</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#E36209;"> minitus </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">to</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">--m</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">60</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#E36209;"> seconds </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">to</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">--s</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">60</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.hour::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: hour </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--h</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">hour</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: hour </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">) </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">24</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.minitus::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: minitus </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--m</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">minitus</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: minitus </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.seconds::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">counter-reset</span><span style="color:#24292E;">: seconds </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--s</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">counter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">seconds</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: seconds </span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这里为了便于观察，将时间调快了10倍（60s =&gt; 6s），如下</p><p><img src="`+E+`" alt=""></p><h2 id="三、时、分、秒自动补零" tabindex="-1">三、时、分、秒自动补零 <a class="header-anchor" href="#三、时、分、秒自动补零" aria-label="Permalink to &quot;三、时、分、秒自动补零&quot;">​</a></h2><p>上面的布局有个问题，1 位数和 2 位数宽度变化导致时钟整体都在“晃动”，所以需要在1位数时补上一个“0”。关于 CSS 补零，之前在文章 <strong>CSS 补全字符串？</strong> 中提到了 3 种方案，由于这里用了计数器，所以直接选择更改计数器样式的方法，通过<code>decimal-leading-zero</code>来实现，具体做法如下</p><div class="language-纯文本 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">纯文本</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.hour::after{</span></span>
<span class="line"><span style="color:#e1e4e8;">  /**/</span></span>
<span class="line"><span style="color:#e1e4e8;">  content: counter(hour, decimal-leading-zero);/*添加计数器样式*/</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.hour::after{</span></span>
<span class="line"><span style="color:#24292e;">  /**/</span></span>
<span class="line"><span style="color:#24292e;">  content: counter(hour, decimal-leading-zero);/*添加计数器样式*/</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>这样就和谐多了</p><p><img src="`+y+`" alt=""></p><p>‍</p><h2 id="四、时间初始化" tabindex="-1">四、时间初始化 <a class="header-anchor" href="#四、时间初始化" aria-label="Permalink to &quot;四、时间初始化&quot;">​</a></h2><p>刚才都从<code>00:00:00</code>开始了，所以需要手动指定一下初始时间。假设现在是<code>19:26:30</code>，如何初始化呢？</p><p>这里需要用<code>animation-delay</code>来提前运动到未来指定位置，为了方便控制，使用三个变量<code>--dh</code>、<code>--dm</code>、<code>--ds</code>来表示初始时间，注意，由于<code>animation-delay</code>也只支持<code>秒(s)</code>或者<code>毫秒(ms)</code>，所以也同样需要转换，实现如下</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">:root</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--dh</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">19</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--dm</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">26</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--ds</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.hour::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: hour </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">) </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation-delay</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">( </span><span style="color:#79B8FF;">-60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--dh</span><span style="color:#E1E4E8;">) );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.minitus::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: minitus </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">) </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation-delay</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">( </span><span style="color:#79B8FF;">-60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--dm</span><span style="color:#E1E4E8;">) );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.seconds::after</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: seconds </span><span style="color:#79B8FF;">60</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">steps</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation-delay</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">calc</span><span style="color:#E1E4E8;">( </span><span style="color:#79B8FF;">-1</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--ds</span><span style="color:#E1E4E8;">) );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--dh</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--dm</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--ds</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.hour::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: hour </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">) </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">24</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-delay</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">( </span><span style="color:#005CC5;">-60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--dh</span><span style="color:#24292E;">) );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.minitus::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: minitus </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-delay</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">( </span><span style="color:#005CC5;">-60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--dm</span><span style="color:#24292E;">) );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.seconds::after</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**/</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: seconds </span><span style="color:#005CC5;">60</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">steps</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-delay</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">calc</span><span style="color:#24292E;">( </span><span style="color:#005CC5;">-1</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--ds</span><span style="color:#24292E;">) );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+i+`" alt=""></p><p>是不是有点奇怪？分钟在秒钟走到 30 的时候才变化，晚了半分钟。原因是这样的，虽然从数字上看，分钟是 26，但是还要考虑到秒钟的运动情况，比如像这种情况，分钟其实已经走了一半，应该是26.5（26 + 30 / 60），所以在计算时还需要加上偏移量。下面我们通过 JS 获取真实的时间，并修复偏移</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">h</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> d.</span><span style="color:#B392F0;">getHours</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">m</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> d.</span><span style="color:#B392F0;">getMinutes</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> d.</span><span style="color:#B392F0;">getSeconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">document.body.style.</span><span style="color:#B392F0;">setProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;--ds&#39;</span><span style="color:#E1E4E8;">, s)</span></span>
<span class="line"><span style="color:#E1E4E8;">document.body.style.</span><span style="color:#B392F0;">setProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;--dm&#39;</span><span style="color:#E1E4E8;">, m </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">document.body.style.</span><span style="color:#B392F0;">setProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;--dh&#39;</span><span style="color:#E1E4E8;">, h </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> m</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">3600</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">d</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">h</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d.</span><span style="color:#6F42C1;">getHours</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">m</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d.</span><span style="color:#6F42C1;">getMinutes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">s</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d.</span><span style="color:#6F42C1;">getSeconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">document.body.style.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;--ds&#39;</span><span style="color:#24292E;">, s)</span></span>
<span class="line"><span style="color:#24292E;">document.body.style.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;--dm&#39;</span><span style="color:#24292E;">, m </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">document.body.style.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;--dh&#39;</span><span style="color:#24292E;">, h </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">3600</span><span style="color:#24292E;">)</span></span></code></pre></div><p>这样就正常了</p><p>​</p><p><img src="`+F+`" alt=""></p><p>‍</p><h2 id="五、闪烁的分隔符" tabindex="-1">五、闪烁的分隔符 <a class="header-anchor" href="#五、闪烁的分隔符" aria-label="Permalink to &quot;五、闪烁的分隔符&quot;">​</a></h2><p>为了时钟看起来更加“动感”，可以给分隔符加上闪烁动画，代码如下</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@keyframes</span><span style="color:#FFAB70;"> shark </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">0%</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">100%</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">opacity</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">50%</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">opacity</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.split</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">animation</span><span style="color:#E1E4E8;">: shark </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">step-end</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">infinite</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#E36209;"> shark </span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">0%</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">100%</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">opacity</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">50%</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">opacity</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.split</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation</span><span style="color:#24292E;">: shark </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">step-end</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">infinite</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>现在看下最终的效果</p><p><img src="`+d+'" alt=""></p><p>完整代码可以访问<strong>CSS time (codepen.io)[5]</strong></p><h2 id="六、总结一下" tabindex="-1">六、总结一下 <a class="header-anchor" href="#六、总结一下" aria-label="Permalink to &quot;六、总结一下&quot;">​</a></h2><p>想不到实现一个时钟效果，用到了那么多 CSS 知识和技巧，简单总结一下吧</p><ol><li>CSS 实现本质是无限循环的 CSS 动画</li><li>灵活运用 CSS calc 计算</li><li>CSS 计数器可以将 CSS 变量通过 content 显示在页面</li><li>数字的变化现在可以通过 CSS @property 配合动画实现</li><li>时分秒的区别在于各自的动画时长、动画起始点不同</li><li>CSS 自动补零可以参考之前的文章，这里采用 decimal-leading-zero 实现</li><li>时间初始化其实就是指定动画 delay 值</li><li>指定初始值时还需要考虑到各自的偏移量，例如 19:30:30，此时的时针数字其实是 30.5</li><li>分隔符的闪烁动画</li></ol><p>其实整个实现过程就是一个不断思考、学习的过程，比如为了实现数字的变化，就必须去学习 @property 相关，为了实现补零，就需要去了解更深层次的计数器相关，还有用到的各种动画。最后，如果觉得还不错，对你有帮助的话，欢迎点赞、收藏、转发❤❤❤</p><h3 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h3><p>[1]<strong>CSS time (codepen.io):</strong> <a href="https://codepen.io/xboxyan/pen/OJOdvyy" title="https://codepen.io/xboxyan/pen/OJOdvyy" target="_blank" rel="noreferrer"><em>https://codepen.io/xboxyan/pen/OJOdvyy</em></a></p><p>[2][2]**CSS @property：**<strong>CSS @property：</strong> ​ ​<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@property" title="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@property" target="_blank" rel="noreferrer"><em>https://developer.mozilla.org/zh-CN/docs/Web/CSS/@property</em></a></p><p>[3][3]**CSS @property，让不可能变可能：**<strong>CSS @property，让不可能变可能：</strong> ​ ​<a href="https://juejin.cn/post/6951201528543707150" title="https://juejin.cn/post/6951201528543707150" target="_blank" rel="noreferrer"><em>https://juejin.cn/post/6951201528543707150</em></a></p><p>[4]<strong>小tips: 如何借助content属性显示CSS var变量值:</strong> <a href="https://www.zhangxinxu.com/wordpress/2019/05/content-css-var/" title="https://www.zhangxinxu.com/wordpress/2019/05/content-css-var/" target="_blank" rel="noreferrer"><em>https://www.zhangxinxu.com/wordpress/2019/05/content-css-var/</em></a></p><p>[5][5]**CSS time (codepen.io)：**<strong>CSS time (codepen.io)：</strong> ​ ​<a href="https://codepen.io/xboxyan/pen/OJOdvyy" title="https://codepen.io/xboxyan/pen/OJOdvyy" target="_blank" rel="noreferrer"><em>https://codepen.io/xboxyan/pen/OJOdvyy</em></a></p><p>‍</p>',75),u=[h];function g(m,B,v,A,f,S){return n(),a("div",null,u)}const k=s(C,[["render",g]]);export{D as __pageData,k as default};
