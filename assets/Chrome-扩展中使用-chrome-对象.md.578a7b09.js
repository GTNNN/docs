import{_ as e,o,c as r,Q as c}from"./chunks/framework.76cb5871.js";const g=JSON.parse('{"title":"Chrome 扩展中使用 chrome 对象","description":"","frontmatter":{},"headers":[],"relativePath":"Chrome-扩展中使用-chrome-对象.md","filePath":"Chrome-扩展中使用-chrome-对象.md"}'),t={name:"Chrome-扩展中使用-chrome-对象.md"},l=c('<h1 id="chrome-扩展中使用-chrome-对象" tabindex="-1">Chrome 扩展中使用 chrome 对象 <a class="header-anchor" href="#chrome-扩展中使用-chrome-对象" aria-label="Permalink to &quot;Chrome 扩展中使用 chrome 对象&quot;">​</a></h1><p>当在 Chrome 扩展中使用 <code>chrome</code> 对象时，你实际上是在使用 Chrome 扩展提供的各种 API。这些 API 允许你访问浏览器的不同功能，如标签、书签、存储、通知等。以下是一些常见的 <code>chrome</code> 对象中的方法和属性：</p><p><strong>1. 标签和窗口相关：</strong></p><ul><li><code>chrome.tabs.create</code>: 打开一个新标签页。</li><li><code>chrome.tabs.query</code>: 查询标签页。</li><li><code>chrome.tabs.update</code>: 更新标签页信息。</li><li><code>chrome.windows.create</code>: 创建一个新窗口。</li><li><code>chrome.windows.getAll</code>: 获取所有打开的窗口。</li></ul><p><strong>2. 存储相关：</strong></p><ul><li><code>chrome.storage.local.get</code>: 获取本地存储的值。</li><li><code>chrome.storage.local.set</code>: 设置本地存储的值。</li><li><code>chrome.storage.sync.get</code>: 获取同步存储的值（会同步到用户登录的不同设备上）。</li></ul><p><strong>3. 消息通信：</strong></p><ul><li><code>chrome.runtime.onMessage</code>: 在不同脚本之间进行消息通信。</li><li><code>chrome.runtime.sendMessage</code>: 发送消息到其他脚本。</li></ul><p><strong>4. 通知相关：</strong></p><ul><li><code>chrome.notifications.create</code>: 创建桌面通知。</li><li><code>chrome.notifications.clear</code>: 清除通知。</li></ul><p><strong>5. 书签相关：</strong></p><ul><li><code>chrome.bookmarks.create</code>: 创建新书签。</li><li><code>chrome.bookmarks.get</code>: 获取书签信息。</li></ul><p><strong>6. 扩展设置：</strong></p><ul><li><code>chrome.runtime.getManifest</code>: 获取扩展的清单信息。</li><li><code>chrome.runtime.openOptionsPage</code>: 打开扩展选项页面。</li></ul><p>以上只是一些常见的示例，实际上还有很多其他的 <code>chrome</code> 对象方法和属性，可以根据你的扩展需求来选择使用。每个 API 都有详细的文档和用法说明，你可以在 Chrome 开发者文档中找到更详细的信息：<a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/" title="Chrome Extension APIs" target="_blank" rel="noreferrer">Chrome Extension APIs</a></p>',15),i=[l];function s(d,m,a,n,h,_){return o(),r("div",null,i)}const u=e(t,[["render",s]]);export{g as __pageData,u as default};
