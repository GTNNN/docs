import{_ as p,o as e,c as t,Q as a}from"./chunks/framework.76cb5871.js";const l=JSON.parse('{"title":"首部字段","description":"","frontmatter":{},"headers":[],"relativePath":"首部字段/首部字段.md","filePath":"首部字段/首部字段.md"}'),n={name:"首部字段/首部字段.md"},o=a('<h1 id="首部字段" tabindex="-1">首部字段 <a class="header-anchor" href="#首部字段" aria-label="Permalink to &quot;首部字段&quot;">​</a></h1><p>‍</p><p><strong>请求⾸部字段（Reauest Header Fields）:客户端向服务器发送请求的报⽂时使⽤的⾸部</strong></p><p>Accept 客户端或者代理能够处理的媒体类型 ✨</p><p>Accept-Encoding 优先可处理的编码格式</p><p>Accept-Language 优先可处理的⾃然语⾔</p><p>Accept-Charset 优先可以处理的字符集</p><p>If-Match ⽐较实体标记（ETage） ✨</p><p>If-None-Match ⽐较实体标记（ETage）与 If-Match相反 ✨</p><p>If-Modified-Since ⽐较资源更新时间（Last-Modified）✨</p><p>If-Unmodified-Since⽐较资源更新时间（Last-Modified），与 If-Modified-Since相反 ✨</p><p>If-Rnages 资源未更新时发送实体byte的范围请求</p><p>Range 实体的字节范围请求 ✨</p><p>Authorization web的认证信息 ✨</p><p>Proxy-Authorization 代理服务器要求web认证信息</p><p>Host 请求资源所在服务器 ✨</p><p>From ⽤户的邮箱地址</p><p>User-Agent 客户端程序信息 ✨</p><p>Max-Forwrads 最⼤的逐跳次数</p><p>TE 传输编码的优先级</p><p>Referer 请求原始放的url</p><p>Expect 期待服务器的特定⾏为</p><p>‍</p><p><strong>响应⾸部字段（Response Header Fields）:从服务器向客户端响应时使⽤的字段</strong></p><p>Accept-Ranges 能接受的字节范围</p><p>Age 推算资源创建经过时间</p><p>Location 令客户端重定向的URI ✨</p><p>vary 代理服务器的缓存信息</p><p>ETag 能够表示资源唯⼀资源的字符串 ✨</p><p>WWW-Authenticate 服务器要求客户端的验证信息</p><p>Proxy-Authenticate 代理服务器要求客户端的验证信息</p><p>Server 服务器的信息 ✨</p><p>Retry-After 和状态码503 ⼀起使⽤的⾸部字段，表示下次请求服务器的时间</p><p>‍</p><p>实体⾸部字段（Entiy Header Fields）:针对请求报⽂和响应报⽂的实体部分使⽤⾸部</p><p>Allow 资源可⽀持http请求的⽅法 ✨</p><p>Content-Language 实体的资源语⾔</p><p>Content-Encoding 实体的编码格式</p><p>Content-Length 实体的⼤⼩（字节）</p><p>Content-Type 实体媒体类型</p><p>Content-MD5 实体报⽂的摘要</p><p>Content-Location 代替资源的yri</p><p>Content-Rnages 实体主体的位置返回</p><p>Last-Modified 资源最后的修改资源 ✨</p><p>Expires 实体主体的过期资源 ✨</p><p>‍</p>',46),r=[o];function i(c,s,d,_,f,g){return e(),t("div",null,r)}const A=p(n,[["render",i]]);export{l as __pageData,A as default};
